name: Version Package

on:
  push:
    branches: [main]
    paths:
      - "src/**"
      - "tests/**"
      - "pnpm-lock.yaml"
      - "README.md"
      - ".github/workflows/version.yml"
  workflow_dispatch: {}

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest

    steps:

      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.FORK_VERSION_RELEASE_BOT_APP_ID }}
          private-key: ${{ secrets.FORK_VERSION_RELEASE_BOT_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0
          persist-credentials: true

      - name: Configure Git User
        run: |
          name="${{ steps.app-token.outputs.app-slug }}[bot]"
          email="${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com"

          echo "Name: $name"
          echo "Email: $email"
          git config --global user.name "$name"
          git config --global user.email "$email"

      - name: Install PNPM
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: 'pnpm'

      - name: Install Dependencies
        run: |
          pnpm install

      - name: Build
        run: |
          pnpm build

      - name: Bump Version
        run: |
          pnpm fork-version

      - name: Push Changes
        run: |
          git push --follow-tags origin main

      - name: Update Summary
        run: |
          version=$(node .\dist\cli.js inspect-version)
          echo "## Version bumped to $version" >> $GITHUB_STEP_SUMMARY